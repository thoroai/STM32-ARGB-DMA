/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _ARGB_MOCK_H
#define _ARGB_MOCK_H

#include "unity.h"
#include "ARGB.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

#ifdef __cplusplus
extern "C" {
#endif

void ARGB_mock_Init(void);
void ARGB_mock_Destroy(void);
void ARGB_mock_Verify(void);




#define argb_init_Ignore() argb_init_CMockIgnore()
void argb_init_CMockIgnore(void);
#define argb_init_StopIgnore() argb_init_CMockStopIgnore()
void argb_init_CMockStopIgnore(void);
#define argb_init_Expect() argb_init_CMockExpect(__LINE__)
void argb_init_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define argb_clear_Ignore() argb_clear_CMockIgnore()
void argb_clear_CMockIgnore(void);
#define argb_clear_StopIgnore() argb_clear_CMockStopIgnore()
void argb_clear_CMockStopIgnore(void);
#define argb_clear_Expect() argb_clear_CMockExpect(__LINE__)
void argb_clear_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define argb_set_brightness_Ignore() argb_set_brightness_CMockIgnore()
void argb_set_brightness_CMockIgnore(void);
#define argb_set_brightness_StopIgnore() argb_set_brightness_CMockStopIgnore()
void argb_set_brightness_CMockStopIgnore(void);
#define argb_set_brightness_ExpectAnyArgs() argb_set_brightness_CMockExpectAnyArgs(__LINE__)
void argb_set_brightness_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define argb_set_brightness_Expect(br) argb_set_brightness_CMockExpect(__LINE__, br)
void argb_set_brightness_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8_t br);
#define argb_set_brightness_IgnoreArg_br() argb_set_brightness_CMockIgnoreArg_br(__LINE__)
void argb_set_brightness_CMockIgnoreArg_br(UNITY_LINE_TYPE cmock_line);
#define argb_set_rgb_Ignore() argb_set_rgb_CMockIgnore()
void argb_set_rgb_CMockIgnore(void);
#define argb_set_rgb_StopIgnore() argb_set_rgb_CMockStopIgnore()
void argb_set_rgb_CMockStopIgnore(void);
#define argb_set_rgb_ExpectAnyArgs() argb_set_rgb_CMockExpectAnyArgs(__LINE__)
void argb_set_rgb_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define argb_set_rgb_Expect(i, r, g, b) argb_set_rgb_CMockExpect(__LINE__, i, r, g, b)
void argb_set_rgb_CMockExpect(UNITY_LINE_TYPE cmock_line, uint16_t i, uint8_t r, uint8_t g, uint8_t b);
#define argb_set_rgb_IgnoreArg_i() argb_set_rgb_CMockIgnoreArg_i(__LINE__)
void argb_set_rgb_CMockIgnoreArg_i(UNITY_LINE_TYPE cmock_line);
#define argb_set_rgb_IgnoreArg_r() argb_set_rgb_CMockIgnoreArg_r(__LINE__)
void argb_set_rgb_CMockIgnoreArg_r(UNITY_LINE_TYPE cmock_line);
#define argb_set_rgb_IgnoreArg_g() argb_set_rgb_CMockIgnoreArg_g(__LINE__)
void argb_set_rgb_CMockIgnoreArg_g(UNITY_LINE_TYPE cmock_line);
#define argb_set_rgb_IgnoreArg_b() argb_set_rgb_CMockIgnoreArg_b(__LINE__)
void argb_set_rgb_CMockIgnoreArg_b(UNITY_LINE_TYPE cmock_line);
#define argb_set_hsv_Ignore() argb_set_hsv_CMockIgnore()
void argb_set_hsv_CMockIgnore(void);
#define argb_set_hsv_StopIgnore() argb_set_hsv_CMockStopIgnore()
void argb_set_hsv_CMockStopIgnore(void);
#define argb_set_hsv_ExpectAnyArgs() argb_set_hsv_CMockExpectAnyArgs(__LINE__)
void argb_set_hsv_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define argb_set_hsv_Expect(i, hue, sat, val) argb_set_hsv_CMockExpect(__LINE__, i, hue, sat, val)
void argb_set_hsv_CMockExpect(UNITY_LINE_TYPE cmock_line, uint16_t i, hsv_hue hue, uint8_t sat, uint8_t val);
#define argb_set_hsv_IgnoreArg_i() argb_set_hsv_CMockIgnoreArg_i(__LINE__)
void argb_set_hsv_CMockIgnoreArg_i(UNITY_LINE_TYPE cmock_line);
#define argb_set_hsv_IgnoreArg_hue() argb_set_hsv_CMockIgnoreArg_hue(__LINE__)
void argb_set_hsv_CMockIgnoreArg_hue(UNITY_LINE_TYPE cmock_line);
#define argb_set_hsv_IgnoreArg_sat() argb_set_hsv_CMockIgnoreArg_sat(__LINE__)
void argb_set_hsv_CMockIgnoreArg_sat(UNITY_LINE_TYPE cmock_line);
#define argb_set_hsv_IgnoreArg_val() argb_set_hsv_CMockIgnoreArg_val(__LINE__)
void argb_set_hsv_CMockIgnoreArg_val(UNITY_LINE_TYPE cmock_line);
#define argb_set_white_Ignore() argb_set_white_CMockIgnore()
void argb_set_white_CMockIgnore(void);
#define argb_set_white_StopIgnore() argb_set_white_CMockStopIgnore()
void argb_set_white_CMockStopIgnore(void);
#define argb_set_white_ExpectAnyArgs() argb_set_white_CMockExpectAnyArgs(__LINE__)
void argb_set_white_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define argb_set_white_Expect(i, w) argb_set_white_CMockExpect(__LINE__, i, w)
void argb_set_white_CMockExpect(UNITY_LINE_TYPE cmock_line, uint16_t i, uint8_t w);
#define argb_set_white_IgnoreArg_i() argb_set_white_CMockIgnoreArg_i(__LINE__)
void argb_set_white_CMockIgnoreArg_i(UNITY_LINE_TYPE cmock_line);
#define argb_set_white_IgnoreArg_w() argb_set_white_CMockIgnoreArg_w(__LINE__)
void argb_set_white_CMockIgnoreArg_w(UNITY_LINE_TYPE cmock_line);
#define argb_fill_rgb_range_Ignore() argb_fill_rgb_range_CMockIgnore()
void argb_fill_rgb_range_CMockIgnore(void);
#define argb_fill_rgb_range_StopIgnore() argb_fill_rgb_range_CMockStopIgnore()
void argb_fill_rgb_range_CMockStopIgnore(void);
#define argb_fill_rgb_range_ExpectAnyArgs() argb_fill_rgb_range_CMockExpectAnyArgs(__LINE__)
void argb_fill_rgb_range_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define argb_fill_rgb_range_Expect(start, end, r, g, b) argb_fill_rgb_range_CMockExpect(__LINE__, start, end, r, g, b)
void argb_fill_rgb_range_CMockExpect(UNITY_LINE_TYPE cmock_line, uint16_t start, uint16_t end, uint8_t r, uint8_t g, uint8_t b);
#define argb_fill_rgb_range_IgnoreArg_start() argb_fill_rgb_range_CMockIgnoreArg_start(__LINE__)
void argb_fill_rgb_range_CMockIgnoreArg_start(UNITY_LINE_TYPE cmock_line);
#define argb_fill_rgb_range_IgnoreArg_end() argb_fill_rgb_range_CMockIgnoreArg_end(__LINE__)
void argb_fill_rgb_range_CMockIgnoreArg_end(UNITY_LINE_TYPE cmock_line);
#define argb_fill_rgb_range_IgnoreArg_r() argb_fill_rgb_range_CMockIgnoreArg_r(__LINE__)
void argb_fill_rgb_range_CMockIgnoreArg_r(UNITY_LINE_TYPE cmock_line);
#define argb_fill_rgb_range_IgnoreArg_g() argb_fill_rgb_range_CMockIgnoreArg_g(__LINE__)
void argb_fill_rgb_range_CMockIgnoreArg_g(UNITY_LINE_TYPE cmock_line);
#define argb_fill_rgb_range_IgnoreArg_b() argb_fill_rgb_range_CMockIgnoreArg_b(__LINE__)
void argb_fill_rgb_range_CMockIgnoreArg_b(UNITY_LINE_TYPE cmock_line);
#define argb_fill_rgb_Ignore() argb_fill_rgb_CMockIgnore()
void argb_fill_rgb_CMockIgnore(void);
#define argb_fill_rgb_StopIgnore() argb_fill_rgb_CMockStopIgnore()
void argb_fill_rgb_CMockStopIgnore(void);
#define argb_fill_rgb_ExpectAnyArgs() argb_fill_rgb_CMockExpectAnyArgs(__LINE__)
void argb_fill_rgb_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define argb_fill_rgb_Expect(r, g, b) argb_fill_rgb_CMockExpect(__LINE__, r, g, b)
void argb_fill_rgb_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8_t r, uint8_t g, uint8_t b);
#define argb_fill_rgb_IgnoreArg_r() argb_fill_rgb_CMockIgnoreArg_r(__LINE__)
void argb_fill_rgb_CMockIgnoreArg_r(UNITY_LINE_TYPE cmock_line);
#define argb_fill_rgb_IgnoreArg_g() argb_fill_rgb_CMockIgnoreArg_g(__LINE__)
void argb_fill_rgb_CMockIgnoreArg_g(UNITY_LINE_TYPE cmock_line);
#define argb_fill_rgb_IgnoreArg_b() argb_fill_rgb_CMockIgnoreArg_b(__LINE__)
void argb_fill_rgb_CMockIgnoreArg_b(UNITY_LINE_TYPE cmock_line);
#define argb_fill_hsv_range_Ignore() argb_fill_hsv_range_CMockIgnore()
void argb_fill_hsv_range_CMockIgnore(void);
#define argb_fill_hsv_range_StopIgnore() argb_fill_hsv_range_CMockStopIgnore()
void argb_fill_hsv_range_CMockStopIgnore(void);
#define argb_fill_hsv_range_ExpectAnyArgs() argb_fill_hsv_range_CMockExpectAnyArgs(__LINE__)
void argb_fill_hsv_range_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define argb_fill_hsv_range_Expect(start, end, hue, sat, val) argb_fill_hsv_range_CMockExpect(__LINE__, start, end, hue, sat, val)
void argb_fill_hsv_range_CMockExpect(UNITY_LINE_TYPE cmock_line, uint16_t start, uint16_t end, uint8_t hue, uint8_t sat, uint8_t val);
#define argb_fill_hsv_range_IgnoreArg_start() argb_fill_hsv_range_CMockIgnoreArg_start(__LINE__)
void argb_fill_hsv_range_CMockIgnoreArg_start(UNITY_LINE_TYPE cmock_line);
#define argb_fill_hsv_range_IgnoreArg_end() argb_fill_hsv_range_CMockIgnoreArg_end(__LINE__)
void argb_fill_hsv_range_CMockIgnoreArg_end(UNITY_LINE_TYPE cmock_line);
#define argb_fill_hsv_range_IgnoreArg_hue() argb_fill_hsv_range_CMockIgnoreArg_hue(__LINE__)
void argb_fill_hsv_range_CMockIgnoreArg_hue(UNITY_LINE_TYPE cmock_line);
#define argb_fill_hsv_range_IgnoreArg_sat() argb_fill_hsv_range_CMockIgnoreArg_sat(__LINE__)
void argb_fill_hsv_range_CMockIgnoreArg_sat(UNITY_LINE_TYPE cmock_line);
#define argb_fill_hsv_range_IgnoreArg_val() argb_fill_hsv_range_CMockIgnoreArg_val(__LINE__)
void argb_fill_hsv_range_CMockIgnoreArg_val(UNITY_LINE_TYPE cmock_line);
#define argb_fill_hsv_Ignore() argb_fill_hsv_CMockIgnore()
void argb_fill_hsv_CMockIgnore(void);
#define argb_fill_hsv_StopIgnore() argb_fill_hsv_CMockStopIgnore()
void argb_fill_hsv_CMockStopIgnore(void);
#define argb_fill_hsv_ExpectAnyArgs() argb_fill_hsv_CMockExpectAnyArgs(__LINE__)
void argb_fill_hsv_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define argb_fill_hsv_Expect(hue, sat, val) argb_fill_hsv_CMockExpect(__LINE__, hue, sat, val)
void argb_fill_hsv_CMockExpect(UNITY_LINE_TYPE cmock_line, hsv_hue hue, uint8_t sat, uint8_t val);
#define argb_fill_hsv_IgnoreArg_hue() argb_fill_hsv_CMockIgnoreArg_hue(__LINE__)
void argb_fill_hsv_CMockIgnoreArg_hue(UNITY_LINE_TYPE cmock_line);
#define argb_fill_hsv_IgnoreArg_sat() argb_fill_hsv_CMockIgnoreArg_sat(__LINE__)
void argb_fill_hsv_CMockIgnoreArg_sat(UNITY_LINE_TYPE cmock_line);
#define argb_fill_hsv_IgnoreArg_val() argb_fill_hsv_CMockIgnoreArg_val(__LINE__)
void argb_fill_hsv_CMockIgnoreArg_val(UNITY_LINE_TYPE cmock_line);
#define argb_fill_white_range_Ignore() argb_fill_white_range_CMockIgnore()
void argb_fill_white_range_CMockIgnore(void);
#define argb_fill_white_range_StopIgnore() argb_fill_white_range_CMockStopIgnore()
void argb_fill_white_range_CMockStopIgnore(void);
#define argb_fill_white_range_ExpectAnyArgs() argb_fill_white_range_CMockExpectAnyArgs(__LINE__)
void argb_fill_white_range_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define argb_fill_white_range_Expect(start, end, w) argb_fill_white_range_CMockExpect(__LINE__, start, end, w)
void argb_fill_white_range_CMockExpect(UNITY_LINE_TYPE cmock_line, uint16_t start, uint16_t end, uint8_t w);
#define argb_fill_white_range_IgnoreArg_start() argb_fill_white_range_CMockIgnoreArg_start(__LINE__)
void argb_fill_white_range_CMockIgnoreArg_start(UNITY_LINE_TYPE cmock_line);
#define argb_fill_white_range_IgnoreArg_end() argb_fill_white_range_CMockIgnoreArg_end(__LINE__)
void argb_fill_white_range_CMockIgnoreArg_end(UNITY_LINE_TYPE cmock_line);
#define argb_fill_white_range_IgnoreArg_w() argb_fill_white_range_CMockIgnoreArg_w(__LINE__)
void argb_fill_white_range_CMockIgnoreArg_w(UNITY_LINE_TYPE cmock_line);
#define argb_fill_white_Ignore() argb_fill_white_CMockIgnore()
void argb_fill_white_CMockIgnore(void);
#define argb_fill_white_StopIgnore() argb_fill_white_CMockStopIgnore()
void argb_fill_white_CMockStopIgnore(void);
#define argb_fill_white_ExpectAnyArgs() argb_fill_white_CMockExpectAnyArgs(__LINE__)
void argb_fill_white_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define argb_fill_white_Expect(w) argb_fill_white_CMockExpect(__LINE__, w)
void argb_fill_white_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8_t w);
#define argb_fill_white_IgnoreArg_w() argb_fill_white_CMockIgnoreArg_w(__LINE__)
void argb_fill_white_CMockIgnoreArg_w(UNITY_LINE_TYPE cmock_line);
#define hsv2rgb_spectrum_Ignore() hsv2rgb_spectrum_CMockIgnore()
void hsv2rgb_spectrum_CMockIgnore(void);
#define hsv2rgb_spectrum_StopIgnore() hsv2rgb_spectrum_CMockStopIgnore()
void hsv2rgb_spectrum_CMockStopIgnore(void);
#define hsv2rgb_spectrum_ExpectAnyArgs() hsv2rgb_spectrum_CMockExpectAnyArgs(__LINE__)
void hsv2rgb_spectrum_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define hsv2rgb_spectrum_Expect(hsv, rgb) hsv2rgb_spectrum_CMockExpect(__LINE__, hsv, rgb)
void hsv2rgb_spectrum_CMockExpect(UNITY_LINE_TYPE cmock_line, const hsv_t hsv, rgb_t* rgb);
#define hsv2rgb_spectrum_ExpectWithArray(hsv, rgb, rgb_Depth) hsv2rgb_spectrum_CMockExpectWithArray(__LINE__, hsv, rgb, rgb_Depth)
void hsv2rgb_spectrum_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, const hsv_t hsv, rgb_t* rgb, int rgb_Depth);
#define hsv2rgb_spectrum_ReturnThruPtr_rgb(rgb) hsv2rgb_spectrum_CMockReturnMemThruPtr_rgb(__LINE__, rgb, sizeof(rgb_t))
#define hsv2rgb_spectrum_ReturnArrayThruPtr_rgb(rgb, cmock_len) hsv2rgb_spectrum_CMockReturnMemThruPtr_rgb(__LINE__, rgb, cmock_len * sizeof(*rgb))
#define hsv2rgb_spectrum_ReturnMemThruPtr_rgb(rgb, cmock_size) hsv2rgb_spectrum_CMockReturnMemThruPtr_rgb(__LINE__, rgb, cmock_size)
void hsv2rgb_spectrum_CMockReturnMemThruPtr_rgb(UNITY_LINE_TYPE cmock_line, rgb_t const* rgb, size_t cmock_size);
#define hsv2rgb_spectrum_IgnoreArg_hsv() hsv2rgb_spectrum_CMockIgnoreArg_hsv(__LINE__)
void hsv2rgb_spectrum_CMockIgnoreArg_hsv(UNITY_LINE_TYPE cmock_line);
#define hsv2rgb_spectrum_IgnoreArg_rgb() hsv2rgb_spectrum_CMockIgnoreArg_rgb(__LINE__)
void hsv2rgb_spectrum_CMockIgnoreArg_rgb(UNITY_LINE_TYPE cmock_line);
#define argb_get_hue_IgnoreAndReturn(cmock_retval) argb_get_hue_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void argb_get_hue_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, hsv_t cmock_to_return);
#define argb_get_hue_StopIgnore() argb_get_hue_CMockStopIgnore()
void argb_get_hue_CMockStopIgnore(void);
#define argb_get_hue_ExpectAnyArgsAndReturn(cmock_retval) argb_get_hue_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void argb_get_hue_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, hsv_t cmock_to_return);
#define argb_get_hue_ExpectAndReturn(i, cmock_retval) argb_get_hue_CMockExpectAndReturn(__LINE__, i, cmock_retval)
void argb_get_hue_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t i, hsv_t cmock_to_return);
#define argb_get_hue_IgnoreArg_i() argb_get_hue_CMockIgnoreArg_i(__LINE__)
void argb_get_hue_CMockIgnoreArg_i(UNITY_LINE_TYPE cmock_line);
#define argb_get_rgb_IgnoreAndReturn(cmock_retval) argb_get_rgb_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void argb_get_rgb_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, rgb_t cmock_to_return);
#define argb_get_rgb_StopIgnore() argb_get_rgb_CMockStopIgnore()
void argb_get_rgb_CMockStopIgnore(void);
#define argb_get_rgb_ExpectAnyArgsAndReturn(cmock_retval) argb_get_rgb_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void argb_get_rgb_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, rgb_t cmock_to_return);
#define argb_get_rgb_ExpectAndReturn(i, cmock_retval) argb_get_rgb_CMockExpectAndReturn(__LINE__, i, cmock_retval)
void argb_get_rgb_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t i, rgb_t cmock_to_return);
#define argb_get_rgb_IgnoreArg_i() argb_get_rgb_CMockIgnoreArg_i(__LINE__)
void argb_get_rgb_CMockIgnoreArg_i(UNITY_LINE_TYPE cmock_line);
#define argb_ready_IgnoreAndReturn(cmock_retval) argb_ready_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void argb_ready_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, argb_state cmock_to_return);
#define argb_ready_StopIgnore() argb_ready_CMockStopIgnore()
void argb_ready_CMockStopIgnore(void);
#define argb_ready_ExpectAndReturn(cmock_retval) argb_ready_CMockExpectAndReturn(__LINE__, cmock_retval)
void argb_ready_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, argb_state cmock_to_return);
#define argb_show_IgnoreAndReturn(cmock_retval) argb_show_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void argb_show_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, argb_state cmock_to_return);
#define argb_show_StopIgnore() argb_show_CMockStopIgnore()
void argb_show_CMockStopIgnore(void);
#define argb_show_ExpectAndReturn(cmock_retval) argb_show_CMockExpectAndReturn(__LINE__, cmock_retval)
void argb_show_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, argb_state cmock_to_return);

#ifdef __cplusplus
}
#endif

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
